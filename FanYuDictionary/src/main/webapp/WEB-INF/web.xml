<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name></display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/config-context/log4j.xml</param-value>
	</context-param>
	<!-- Spring的log4j监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<filter>
		<filter-name>addHeaderFilter</filter-name>
		<filter-class>utils.AddHeaderFilter</filter-class>
		<init-param>
			<param-name>Access-Control-Allow-Origin</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>Access-Control-Allow-Methods</param-name>
			<param-value>GET,POST,DELETE,PUT</param-value>
		</init-param>
		<init-param>
			<param-name>Access-Control-Max-Age</param-name>
			<param-value>60</param-value>
		</init-param>
		<init-param>
			<param-name>Access-Control-Allow-Headers</param-name>
			<param-value>x-requested-with</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>addHeaderFilter</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>
	<!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>


	<!-- Make sure any request you want accessible to Shiro is filtered. /* 
		catches all -->
	<!-- requests. Usually this filter mapping is defined first (before all 
		others) to -->
	<!-- ensure that Shiro works in subsequent filters in the filter chain: -->
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/rest/user/*</url-pattern>
		<url-pattern>/rest/dictionary/*</url-pattern>
		<url-pattern>/rest/word/*</url-pattern>
		
	</filter-mapping>

	<!-- 核心控制器 -->
	<!-- <servlet> <servlet-name>mvc-dispatcher</servlet-name> <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> 
		<init-param> <param-name>contextConfigLocation</param-name> <param-value>/WEB-INF/applicationContext.xml</param-value> 
		</init-param> <load-on-startup>1</load-on-startup> </servlet> <listener> 
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> 
		</listener> <servlet-mapping> <servlet-name>mvc-dispatcher</servlet-name> 
		<url-pattern>/</url-pattern> </servlet-mapping> -->
	<servlet>
		<servlet-name>restSdkService</servlet-name>
		<servlet-class>org.apache.wink.server.internal.servlet.RestServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>restSdkService</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

	<!-- <context-param> <param-name>contextConfigLocation</param-name> <param-value> 
		classpath:META-INF/server/wink-core-context.xml, /WEB-INF/applicationContext.xml 
		</param-value> </context-param> -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:META-INF/server/wink-core-context.xml,classpath*:/spring-context/*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


</web-app>
